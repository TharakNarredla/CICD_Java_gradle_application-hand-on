pipeline{
    agent any 
    environment{
        VERSION = "${env.BUILD_ID}"
    }
    stages{
        stage("sonar quality check"){
            agent {
                docker {
                    image 'openjdk:11'
                }
            }
            steps{
                script{
                    withSonarQubeEnv(credentialsId: 'sonar-tocken') {
                            sh 'chmod +x gradlew'
                            
                            sh './gradlew build'
                            
                    }
                     
                }
            }
        }
        stage("docker build & docker push"){
            steps{
                script{
                    withCredentials([string(credentialsId: 'docker_pass', variable: 'docker_password')]) {
                             sh '''
                                docker build -t 10.10.11.98:8083/springapp:${VERSION} .
                                docker login -u admin -p $docker_password 10.10.11.98:8083 
                                docker push  10.10.11.98:8083/springapp:${VERSION}
                                docker rmi 10.10.11.98:8083/springapp:${VERSION}
                            '''
                    }
                }
            }
        }
        stage('indentifying misconfigs using datree in helm charts'){
            steps{
                script{

                    dir('kubernetes/') {
                        
                              sh 'helm datree test myapp/'
                        }
                    }
                }
            }
        }
    
}
